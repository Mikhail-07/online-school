const { Telegraf } = require('telegraf');
const { addToWaitlist } = require('../controllers/coursesController');

const bot = new Telegraf(process.env.BOT_TOKEN);

const userData = {};  // –í—Ä–µ–º–µ–Ω–Ω–æ–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
const emojis = ['üò¥', 'üò∂', 'ü§ñ', 'üòò']; // –°–ø–∏—Å–æ–∫ —ç–º–æ–¥–∑–∏

bot.start((ctx) => {
  const chatId = ctx.chat.id;
  
  // –°–±—Ä–æ—Å —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø—Ä–∏ –ø–æ–≤—Ç–æ—Ä–Ω–æ–º –∑–∞–ø—É—Å–∫–µ
  userData[chatId] = { step: 'name', isRegistered: false };

  ctx.reply(
    '–ü—Ä–∏–≤–µ—Ç! –¢—É—Ç —Ç—ã –º–æ–∂–µ—à—å –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è –Ω–∞ –∫—É—Ä—Å "–í–Ω—É—Ç—Ä–µ–Ω–Ω–∏–π –∫—Ä–∏—Ç–∏–∫". –≠—Ç–æ—Ç –∫—É—Ä—Å –æ–±...'
    + '\n\n–î–ª—è –ø—Ä–µ–¥–∑–∞–ø–∏—Å–∏ –Ω–∞ –∫—É—Ä—Å –Ω—É–∂–Ω–æ –æ—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ –Ω–µ—Å–∫–æ–ª—å–∫–æ –≤–æ–ø—Ä–æ—Å–æ–≤ üòä'
  );
  ctx.reply('–í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –∏–º—è üòé');
});

bot.on('text', async (ctx) => {
  const chatId = ctx.chat.id;

  // –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω, –æ—Ç–≤–µ—á–∞–µ–º —Å–ª—É—á–∞–π–Ω—ã–º —ç–º–æ–¥–∑–∏
  if (userData[chatId] && userData[chatId].isRegistered) {
    const randomEmoji = emojis[Math.floor(Math.random() * emojis.length)];
    return ctx.reply(randomEmoji);
  }

  // –ï—Å–ª–∏ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ—Ç, —Å–æ–∑–¥–∞–µ–º –∑–∞–ø–∏—Å—å
  if (!userData[chatId]) {
    userData[chatId] = { step: 'name', isRegistered: false };
  }

  const step = userData[chatId].step;
  const text = ctx.message.text;

  if (step === 'name') {
    userData[chatId].name = text;
    userData[chatId].step = 'surname';
    return ctx.reply('–í–≤–µ–¥–∏—Ç–µ –≤–∞—à—É —Ñ–∞–º–∏–ª–∏—é üòÉ');
  } else if (step === 'surname') {
    userData[chatId].surname = text;
    userData[chatId].step = 'email';
    return ctx.reply('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞–ø–∏—à–∏ —Å–≤–æ–π email üòâ');
  } else if (step === 'email') {
    userData[chatId].email = text;

    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ
    try {
      const response = await addToWaitlist({
        chatId,
        name: userData[chatId].name,
        surname: userData[chatId].surname,
        email: userData[chatId].email,
        courseId: '1'
      });
      ctx.reply(response.message);

      // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ñ–ª–∞–≥ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
      userData[chatId].isRegistered = true;
    } catch (error) {
      ctx.reply('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ –∏–ª–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ —Å–ª—É–∂–±—É –∑–∞–±–æ—Ç—ã direct@tsarevaschool.ru');
      console.error(error);
    } finally {
      // –û—á–∏—Å—Ç–∫–∞ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫—Ä–æ–º–µ —Ñ–ª–∞–≥–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
      userData[chatId] = { isRegistered: true };
    }
  }
});

module.exports = bot;
